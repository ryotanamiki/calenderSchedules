<!DOCTYPE html>
<html lang="ja">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="css/style.css">
    <title>カレンダー</title>
</head>

<body>
    <header>
        <h1>カレンダー</h1>
    </header>
    <div class="calenderContainer">
        <div class="calenderBox">
        <p>
            <!-- 前の月へのリンク -->
            <% if (currentMonth> 1) { %>
                <a href="/calendar/<%= currentYear %>/<%= currentMonth - 1 %>">←</a>
                <% } %>
                    <%= currentYear %>年<%= currentMonth %>月
                            <!-- 次の月へのリンク -->
                            <% if (currentMonth < 12) { %>
                                <a href="/calendar/<%= currentYear %>/<%= currentMonth + 1 %>">→</a>
                                <% } %>
        </p>

        <!-- カレンダーの表示 -->
        <table>
            <tr>
                <th>日</th>
                <th>月</th>
                <th>火</th>
                <th>水</th>
                <th>木</th>
                <th>金</th>
                <th>土</th>
            </tr>
            <tr>
                <!-- カレンダーの日付を表示 -->
                <% for (let i=1; i <=daysInMonth; i++) { %>
                    <% const currentDate=new Date(currentYear, currentMonth - 1, i); %>
                        <td>
                            <a href="#" class="schedule-link" data-date="<%= `${currentYear}-${currentMonth}-${i}` %>">
                                <%= i %>
                            </a>
                        </td>
                        <% if (currentDate.getDay()===6) { %>
            </tr>
            <tr>
                <% } %>
                    <% } %>
            </tr>
        </table>
        </div>
        <div class="scheduleContainer">
            <h2>
                <span id="modal-date-schedule"></span>
            </h2>
            <ul id="schedule-list"></ul>
        </div>
        </div>

    <!-- モーダルウィンドウ -->
    <div id="schedule-modal" style="display: none;">
        <h2>
            <span id="modal-date"></span> の予定
        </h2>
        <form id="schedule-form" action="/addSchedule" method="post">
            <input type="hidden" name="date" value="<%= date %>">
            <label for="name">タイトル:</label>
            <input type="text" id="name" name="name" required><br>
            <label for="user">記入者:</label>
            <input type="text" id="user" name="user" required><br>
            <label for="content">スケジュール内容:</label><br>
            <textarea id="content" name="content" rows="4" required></textarea><br>
            <button type="submit">予定を追加</button>
        </form>
    </div>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        $(document).ready(function () {
            $('.schedule-link').on('click', function (e) {
                e.preventDefault();
                const date = $(this).data('date');

                // クリックされた日付に基づいてschedule.ejsを取得し、モーダルに表示する
                $.ajax({
                    url: '/getSchedule',
                    data: { date: date },
                    method: 'GET',
                    success: function (scheduleHtml) {
                        const schedule = scheduleHtml;

                        openModal(scheduleHtml, date);
                    },
                    error: function () {
                        alert('スケジュールの読み込み中にエラーが発生しました。');
                    }
                });
            });

            // モーダルを閉じるためのイベントハンドラ
            $('#schedule-modal').on('click', function () {
                closeModal();
            });

            // フォームの送信処理
            $('#schedule-form').on('submit', function (e) {
                e.preventDefault();
                const formData = $(this).serialize();

                // スケジュールを追加するAPIにフォームデータを送信
                $.ajax({
                    url: '/addSchedule',
                    data: formData,
                    method: 'POST',
                    success: function (response) {

                        $('.scheduleContainer').html(`<p>${response.content}</p>`);


                        alert('スケジュールが追加されました。');
                        closeModal();
                    },
                    error: function () {
                        alert('スケジュールの追加中にエラーが発生しました。');
                    }
                });
            });
            // モーダル内のフォームクリック時にイベント伝播を防ぐ
            $('#schedule-form').on('click', function (e) {
                e.stopPropagation();
            });


            function openModal(scheduleHtml, date) {
                const modal = document.getElementById('schedule-modal');
                if (modal) {
                    modal.style.display = 'block';
                    document.body.style.overflow = 'hidden';

                    const modalContent = document.getElementById('modal-content');
                    if (modalContent) {
                        modalContent.innerHTML = scheduleHtml;
                    }

                    const dateElement = document.getElementById('modal-date');
                    if (dateElement) {
                        dateElement.textContent = date;
                    }

                    const dateContent = document.getElementById('modal-date-schedule');
                    if (dateContent) {
                        dateContent.textContent = date;
                    }
                }
            }

            function closeModal() {
                const modal = document.getElementById('schedule-modal');
                if (modal) {
                    modal.style.display = 'none';
                    document.body.style.overflow = 'auto';

                    const modalContent = document.getElementById('modal-content');
                    if (modalContent) {
                        modalContent.innerHTML = '';
                    }

                }
                const dateContent = document.getElementById('modal-date-schedule');
                if (dateContent) {
                    dateContent.textContent = ''; // テキストを空に設定する
                }
            }

            // モーダル内の背景をクリックしてもモーダルを閉じる
            $('#schedule-modal').on('click', function (e) {
                if (e.target === this) {
                    closeModal();
                }
            });
        });
    </script>
</body>

</html>